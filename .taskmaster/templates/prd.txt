<context>
# Overview
SEO 최적화된 블로그 글을 자동으로 생성하는 파이프라인 시스템입니다. 키워드 하나를 입력받아 구조화된 HTML 기사를 생성하고 워드프레스에 업로드합니다. 
표절 방지와 콘텐츠 품질을 보장하면서도 SEO 친화적인 구조를 유지하는 것이 핵심입니다.

# Core Features
## MVP 단계 기능
- **제목 생성**: 키워드 기반 SEO 최적화 제목 자동 생성
- **아웃라인 생성**: JSON 구조의 H2/H3 계층적 목차 생성
- **섹션별 콘텐츠 생성**: H2 단위로 나누어 각 섹션 300-500자 생성
- **HTML 조립**: 전역 CSS 클래스를 준수하는 하드코딩 HTML 생성
- **워드프레스 업로드**: REST API를 통한 초안 자동 업로드

## 완성 단계 기능 (2-4주)
- **SERP 데이터 수집**: 구글 검색 결과 수집 및 분석
- **콘텐츠 크롤링**: 참고 문서 수집 및 정제
- **표절 방지 시스템**: 5-gram Jaccard, 임베딩 유사도 이중 검증
- **내부/외부 링크 자동화**: 임베딩 기반 관련 콘텐츠 연결
- **이미지/표 자동 생성**: 섹션별 적절한 시각 자료 삽입
- **품질 게이트**: 자동 품질 검증 및 재생성

# User Experience
## 사용자 워크플로우
1. 키워드 입력
2. 제목 및 아웃라인 자동 생성
3. 섹션별 콘텐츠 순차 생성
4. HTML 미리보기 확인
5. 워드프레스 초안 업로드

## UI/UX 고려사항
- 생성 진행 상황 실시간 표시
- 섹션별 재생성 옵션 제공
- HTML 미리보기 기능
- 품질 점수 대시보드
</context>
<PRD>
# Technical Architecture

## 시스템 컴포넌트
### MVP 아키텍처
- **제목 생성기**: LangChain + GPT-5-nano 기반 SEO 제목 생성
- **아웃라인 생성기**: Structured Output(PydanticOutputParser)로 JSON 강제
- **섹션 생성기**: 메모리 유지하며 순차적 콘텐츠 생성
- **HTML 조립기**: Python 하드코딩으로 안전한 HTML 구조 생성
- **워드프레스 커넥터**: REST API 클라이언트

### 완성형 아키텍처 (추가)
- **SERP 수집기**: Programmable Search API / SerpAPI 우선
- **크롤러**: Selenium/Playwright 하이브리드
- **표절 검사기**: n-gram + 임베딩 이중 검증
- **링크 빌더**: FAISS 임베딩 인덱스 기반 추천
- **품질 검증기**: 다층 품질 게이트 시스템

## 데이터 모델
### 문서 상태 객체 (STATE)
```python
{
  "keyword": str,
  "title": str,
  "outline": {
    "sections": [
      {"h2": str, "h3": [str], "h4_map": dict}
    ]
  },
  "sections": [
    {
      "h2_id": str,
      "draft_text": str,
      "summary_3lines": str,
      "facts": []
    }
  ],
  "metadata": {
    "intent": str,
    "est_length": int,
    "created_at": datetime
  }
}
```

## HTML/CSS 규격
### 고정 클래스 체계
- `fs-article`: 전체 article 래퍼
- `fs-title`: 제목 영역
- `fs-toc`: 목차 영역
- `fs-section`: 섹션 컨테이너
- `fs-card`: 카드형 박스
- `fs-table`: 테이블 스타일
- `fs-btn`: 버튼 스타일

### HTML 구조 템플릿
```html
<article class="fs-article">
  <header class="fs-title">
    <h1>{title}</h1>
    <div class="fs-meta">{date} | {category}</div>
  </header>
  
  <nav class="fs-toc">
    <h2>목차</h2>
    <ul>
      {toc_items}
    </ul>
  </nav>
  
  <section class="fs-section" id="{h2_id}">
    <h2>{h2_title}</h2>
    <div class="fs-content">
      {section_content}
    </div>
  </section>
</article>
```

# Development Roadmap

## Phase 1: MVP (1주)
### 핵심 파이프라인 구축
1. **기본 생성 파이프라인**
   - 키워드 → 제목 생성 모듈
   - 제목 → 아웃라인(JSON) 생성 모듈  
   - 아웃라인 → 섹션별 콘텐츠 생성 모듈
   - 섹션 콘텐츠 → HTML 조립 모듈

2. **메모리/상태 관리**
   - 섹션 간 컨텍스트 유지 시스템
   - 이전 섹션 요약 메모 관리
   - 전역 사실 리스트 축적

3. **HTML 생성**
   - 하드코딩 템플릿 기반 조립
   - 전역 CSS 클래스 적용
   - 기본 TOC 자동 생성

4. **워드프레스 연동**
   - REST API 인증 설정
   - 초안 업로드 기능
   - 에러 핸들링

## Phase 2: 안정화 (1주)
### 품질 개선
1. **콘텐츠 품질 향상**
   - 섹션별 길이 조절 (300-500자)
   - H2/H3 구조 최적화
   - 흐름 연결성 강화

2. **에러 처리**
   - LLM 응답 실패 재시도
   - JSON 파싱 에러 핸들링
   - 섹션 재생성 로직

3. **로깅/모니터링**
   - 생성 과정 로그 기록
   - 성공/실패 지표 수집
   - 성능 메트릭 측정

## Phase 3: 완성형 (2-4주)
### 고급 기능 추가
1. **데이터 수집 레이어**
   - SERP API 통합
   - 콘텐츠 크롤링 파이프라인
   - 문서 정제 및 품질 평가

2. **표절 방지 시스템**
   - 5-gram Jaccard 유사도 검사
   - 문장 임베딩 코사인 유사도
   - 재생성 자동화

3. **링크 자동화**
   - 내부 링크 임베딩 매칭
   - 외부 링크 신뢰도 검증
   - 앵커 텍스트 최적화

4. **시각 자료**
   - 이미지 placeholder 실제 이미지로 교체
   - 표 자동 생성 (비교 데이터)
   - WebP 최적화 파이프라인

5. **품질 게이트**
   - 다층 검증 시스템
   - 자동 품질 점수 산정
   - A/B 테스트 지원

# Logical Dependency Chain

## MVP 개발 순서
1. **LangChain 환경 설정** (기초)
   - OpenAI/Anthropic API 설정
   - LangChain 기본 체인 구성
   - Pydantic 모델 정의

2. **제목 생성 모듈** (독립적)
   - 키워드 입력 처리
   - SEO 최적화 제목 생성
   - 길이/형식 검증

3. **아웃라인 생성 모듈** (제목 의존)
   - JSON 스키마 정의
   - Structured Output 파서 구성
   - 재시도 로직 구현

4. **섹션 생성 모듈** (아웃라인 의존)
   - 메모리 관리 시스템
   - 순차적 생성 로직
   - 컨텍스트 주입 메커니즘

5. **HTML 조립 모듈** (섹션 의존)
   - 템플릿 시스템 구축
   - CSS 클래스 매핑
   - TOC 자동 생성

6. **워드프레스 업로드** (HTML 의존)
   - API 클라이언트 구현
   - 인증 처리
   - 초안 업로드 기능

## 완성형 확장 순서
1. SERP/크롤링 → 2. 표절 검사 → 3. 링크 자동화 → 4. 이미지/표 → 5. 품질 게이트

# Risks and Mitigations

## MVP 단계 리스크
### LLM 응답 불안정성
- **리스크**: GPT 응답 형식 불일치, 타임아웃
- **대응**: Structured Output 강제, 재시도 로직, 폴백 템플릿

### 섹션 간 일관성 부족
- **리스크**: 컨텍스트 손실로 인한 내용 중복/모순
- **대응**: 메모리 시스템 강화, 이전 섹션 요약 필수 포함

### HTML 구조 깨짐
- **리스크**: 잘못된 태그, 클래스 오타
- **대응**: 하드코딩 템플릿, HTML 검증기 적용

## 완성형 단계 리스크
### 크롤링 차단
- **리스크**: robots.txt 위반, IP 차단, 캡차
- **대응**: API 우선 정책, 백오프 전략, 프록시 로테이션

### 표절 이슈
- **리스크**: 원문과 유사도 과다
- **대응**: 이중 검증 시스템, 자동 재생성

### 성능 저하
- **리스크**: 대량 처리 시 속도 문제
- **대응**: 비동기 처리, 캐싱, 병렬 파이프라인

# Appendix

## 기술 스택
### MVP
- Python 3.11.9 +
- LangChain 0.3+ 최신버전
- OpenAI/Anthropic API
- WordPress REST API
- SQLite (상태 저장)

### 완성형 (추가)
- Selenium/Playwright
- FAISS (임베딩 인덱스)
- MinHash/SimHash (중복 검사)
- Ko-sentence-transformers
- Redis (캐싱)

## 프롬프트 가이드라인
### 제목 생성
- 50-60자 이내
- 키워드 포함 필수
- 클릭 유도 요소 포함

### 아웃라인 생성
- H2 5-7개
- H3는 필요시만 2-3개
- 논리적 흐름 유지

### 섹션 생성 (H2 태그 1개당 1개의 섹션)
- 300-500자 타겟
- 이전 섹션 연결 필수
- 근거 있는 정보만 포함

## 품질 기준
### MVP 통과 기준
- 제목 생성 성공률 > 95%
- 아웃라인 JSON 유효성 100%
- 섹션별 길이 준수율 > 90%
- HTML 구조 유효성 100%
- 워드프레스 업로드 성공률 > 95%

### 완성형 목표
- 표절 검사 통과율 > 98%
- 내부 링크 정확도 > 85%
- 품질 점수 평균 > 80/100

워드프레스 앱 패스워드 : otFv tHVG aAQc gYvi 518v Ah4o

</PRD>
